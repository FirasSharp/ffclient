name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v4
        with:
          go-version: '1.24.0'

      - name: Get version
        id: tag
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Get commit
        id: commit
        run: echo "commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -ldflags "\
            -X 'main.version=${{ steps.tag.outputs.version }}' \
            -X 'main.commit=${{ steps.commit.outputs.commit }}' \
            -X 'main.date=$(date -u +"%Y-%m-%dT%H:%M:%SZ")'" \
            -o ffclient-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }} .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ffclient-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ffclient-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: "v${{ needs.build.outputs.version }}"
          files: |
            artifacts/ffclient-linux-amd64
            artifacts/ffclient-linux-arm64
            artifacts/ffclient-darwin-amd64
            artifacts/ffclient-darwin-arm64
            artifacts/ffclient-windows-amd64.exe
            artifacts/ffclient-windows-arm64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}